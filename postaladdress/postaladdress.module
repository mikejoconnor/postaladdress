<?php

/**
 * Implementation of hook_field_info()
 */
function postaladdress_field_info() {
  $fields = array();

  $fields['postaladdress'] = array(
    'label' => t('Postal Address'),
    'description' => t('A field type used for storing postal addresses according the oXal standard.'),
    'default_widget' => 'postaladress_textfield',
    'default_formatter' => 'text_plain',
  );

  return $fields;
}

/**
 * Implementation of hook_field_schema()
 */
function postaladdress_field_schema() {
  $columns = array(
    'country' => array(
      'description' => 'Two letter ISO country code of this address.',
      'type' => 'char',
      'length' => 2,
      'not null' => FALSE,
      'default' => '',
    ),
    'administrative_area' => array(
      'description' => 'The dministrative area of this address.',
      'type' => 'varchar',
      'length' => 255,
      'default' => '',
      'not null' => FALSE,
    ),
    'sub_administrative_area' => array(
      'description' => 'The sub administrative area of this address.',
      'type' => 'varchar',
      'length' => 255,
      'default' => '',
      'not null' => FALSE,
    ),
    'locality' => array(
      'description' => 'The locality of this address.',
      'type' => 'varchar',
      'length' => 255,
      'default' => '',
      'not null' => FALSE,
    ),
    'dependent_locality' => array(
      'description' => 'The dependent locality of this address.',
      'type' => 'varchar',
      'length' => 255,
      'default' => '',
      'not null' => FALSE,
    ),
    'postal_code' => array(
      'description' => 'The postal code of this address.',
      'type' => 'varchar',
      'length' => 255,
      'default' => '',
      'not null' => FALSE,
    ),
    'thoroughfare' => array(
      'description' => 'The thoroughfare of this address.',
      'type' => 'varchar',
      'length' => 255,
      'default' => '',
      'not null' => FALSE,
    ),
    'premise' => array(
      'description' => 'The premise of this address.',
      'type' => 'varchar',
      'length' => 255,
      'default' => '',
      'not null' => FALSE,
    ),
    'sub_premise' => array(
      'description' => 'The sub_premise of this address.',
      'type' => 'varchar',
      'length' => 255,
      'default' => '',
      'not null' => FALSE,
    ),
    'data' => array(
      'description' => 'Additional data for this address.',
      'type' => 'text',
      'size' => 'big',
      'not null' => FALSE,
      'serialize' => TRUE,
    ),
  );

  return array(
    'columns' => $columns,
  );
}

/**
 * Implementation of hook_widget_info()
 */
function postaladdress_field_widget_info() {
  $widgets = array();

  $widgets['postaladdress_textfield'] = array(
    'label' => t('Address Textfield'),
    'field types' => array('postaladdress'),
  );

  return $widgets;
}

/**
 * Implementation of hook_field_widget_form()
 */
function postaladdress_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element) {
  $country = isset($items[$delta]['country']) ? $items[$delta]['value'] : '';

  $element['country'] = array(
    '#type' => 'select',
    '#title' => t('Country'),
    '#options' => postaladdress_countries(),
    '#required' => true,
    '#default_value' => $country,
  );
  
  if (empty($country)) {
    
  }
  else {
  
  }
  $element += postaladdress_edit_form($items, $delta);

  return $element;
}

/**
 * Implementation of hook_field_is_empty()
 */
function postaladdress_field_is_empty($item, $field) {
  if (empty($item['value']) && (string)$item['value'] !== '0') {
    return TRUE;
  }
  return FALSE;
}

/**
 * Return the list of countries.
 */
function postaladdress_countries() {
  static $countries;

  if (isset($countries)) {
    return $countries;
  }

  $countries = array(
    'AD' => t('Andorra'),
    'AE' => t('United Arab Emirates'),
    'AF' => t('Afghanistan'),
    'AG' => t('Antigua and Barbuda'),
    'AI' => t('Anguilla'),
    'AL' => t('Albania'),
    'AM' => t('Armenia'),
    'AN' => t('Netherlands Antilles'),
    'AO' => t('Angola'),
    'AQ' => t('Antarctica'),
    'AR' => t('Argentina'),
    'AS' => t('American Samoa'),
    'AT' => t('Austria'),
    'AU' => t('Australia'),
    'AW' => t('Aruba'),
    'AX' => t('Aland Islands'),
    'AZ' => t('Azerbaijan'),
    'BA' => t('Bosnia and Herzegovina'),
    'BB' => t('Barbados'),
    'BD' => t('Bangladesh'),
    'BE' => t('Belgium'),
    'BF' => t('Burkina Faso'),
    'BG' => t('Bulgaria'),
    'BH' => t('Bahrain'),
    'BI' => t('Burundi'),
    'BJ' => t('Benin'),
    'BL' => t('Saint BarthÃ©lemy'),
    'BM' => t('Bermuda'),
    'BN' => t('Brunei'),
    'BO' => t('Bolivia'),
    'BR' => t('Brazil'),
    'BS' => t('Bahamas'),
    'BT' => t('Bhutan'),
    'BV' => t('Bouvet Island'),
    'BW' => t('Botswana'),
    'BY' => t('Belarus'),
    'BZ' => t('Belize'),
    'CA' => t('Canada'),
    'CC' => t('Cocos (Keeling) Islands'),
    'CD' => t('Congo (Kinshasa)'),
    'CF' => t('Central African Republic'),
    'CG' => t('Congo (Brazzaville)'),
    'CH' => t('Switzerland'),
    'CI' => t('Ivory Coast'),
    'CK' => t('Cook Islands'),
    'CL' => t('Chile'),
    'CM' => t('Cameroon'),
    'CN' => t('China'),
    'CO' => t('Colombia'),
    'CR' => t('Costa Rica'),
    'CS' => t('Serbia And Montenegro'),
    'CU' => t('Cuba'),
    'CV' => t('Cape Verde'),
    'CX' => t('Christmas Island'),
    'CY' => t('Cyprus'),
    'CZ' => t('Czech Republic'),
    'DE' => t('Germany'),
    'DJ' => t('Djibouti'),
    'DK' => t('Denmark'),
    'DM' => t('Dominica'),
    'DO' => t('Dominican Republic'),
    'DZ' => t('Algeria'),
    'EC' => t('Ecuador'),
    'EE' => t('Estonia'),
    'EG' => t('Egypt'),
    'EH' => t('Western Sahara'),
    'ER' => t('Eritrea'),
    'ES' => t('Spain'),
    'ET' => t('Ethiopia'),
    'FI' => t('Finland'),
    'FJ' => t('Fiji'),
    'FK' => t('Falkland Islands'),
    'FM' => t('Micronesia'),
    'FO' => t('Faroe Islands'),
    'FR' => t('France'),
    'GA' => t('Gabon'),
    'GD' => t('Grenada'),
    'GE' => t('Georgia'),
    'GF' => t('French Guiana'),
    'GG' => t('Guernsey'),
    'GH' => t('Ghana'),
    'GI' => t('Gibraltar'),
    'GL' => t('Greenland'),
    'GM' => t('Gambia'),
    'GN' => t('Guinea'),
    'GP' => t('Guadeloupe'),
    'GQ' => t('Equatorial Guinea'),
    'GR' => t('Greece'),
    'GS' => t('South Georgia and the South Sandwich Islands'),
    'GT' => t('Guatemala'),
    'GU' => t('Guam'),
    'GW' => t('Guinea-Bissau'),
    'GY' => t('Guyana'),
    'HK' => t('Hong Kong S.A.R., China'),
    'HM' => t('Heard Island and McDonald Islands'),
    'HN' => t('Honduras'),
    'HR' => t('Croatia'),
    'HT' => t('Haiti'),
    'HU' => t('Hungary'),
    'ID' => t('Indonesia'),
    'IE' => t('Ireland'),
    'IL' => t('Israel'),
    'IM' => t('Isle of Man'),
    'IN' => t('India'),
    'IO' => t('British Indian Ocean Territory'),
    'IQ' => t('Iraq'),
    'IR' => t('Iran'),
    'IS' => t('Iceland'),
    'IT' => t('Italy'),
    'JE' => t('Jersey'),
    'JM' => t('Jamaica'),
    'JO' => t('Jordan'),
    'JP' => t('Japan'),
    'KE' => t('Kenya'),
    'KG' => t('Kyrgyzstan'),
    'KH' => t('Cambodia'),
    'KI' => t('Kiribati'),
    'KM' => t('Comoros'),
    'KN' => t('Saint Kitts and Nevis'),
    'KP' => t('North Korea'),
    'KR' => t('South Korea'),
    'KW' => t('Kuwait'),
    'KY' => t('Cayman Islands'),
    'KZ' => t('Kazakhstan'),
    'LA' => t('Laos'),
    'LB' => t('Lebanon'),
    'LC' => t('Saint Lucia'),
    'LI' => t('Liechtenstein'),
    'LK' => t('Sri Lanka'),
    'LR' => t('Liberia'),
    'LS' => t('Lesotho'),
    'LT' => t('Lithuania'),
    'LU' => t('Luxembourg'),
    'LV' => t('Latvia'),
    'LY' => t('Libya'),
    'MA' => t('Morocco'),
    'MC' => t('Monaco'),
    'MD' => t('Moldova'),
    'ME' => t('Montenegro'),
    'MF' => t('Saint Martin (French part)'),
    'MG' => t('Madagascar'),
    'MH' => t('Marshall Islands'),
    'MK' => t('Macedonia'),
    'ML' => t('Mali'),
    'MM' => t('Myanmar'),
    'MN' => t('Mongolia'),
    'MO' => t('Macao S.A.R., China'),
    'MP' => t('Northern Mariana Islands'),
    'MQ' => t('Martinique'),
    'MR' => t('Mauritania'),
    'MS' => t('Montserrat'),
    'MT' => t('Malta'),
    'MU' => t('Mauritius'),
    'MV' => t('Maldives'),
    'MW' => t('Malawi'),
    'MX' => t('Mexico'),
    'MY' => t('Malaysia'),
    'MZ' => t('Mozambique'),
    'NA' => t('Namibia'),
    'NC' => t('New Caledonia'),
    'NE' => t('Niger'),
    'NF' => t('Norfolk Island'),
    'NG' => t('Nigeria'),
    'NI' => t('Nicaragua'),
    'NL' => t('Netherlands'),
    'NO' => t('Norway'),
    'NP' => t('Nepal'),
    'NR' => t('Nauru'),
    'NU' => t('Niue'),
    'NZ' => t('New Zealand'),
    'OM' => t('Oman'),
    'PA' => t('Panama'),
    'PE' => t('Peru'),
    'PF' => t('French Polynesia'),
    'PG' => t('Papua New Guinea'),
    'PH' => t('Philippines'),
    'PK' => t('Pakistan'),
    'PL' => t('Poland'),
    'PM' => t('Saint Pierre and Miquelon'),
    'PN' => t('Pitcairn'),
    'PR' => t('Puerto Rico'),
    'PS' => t('Palestinian Territory'),
    'PT' => t('Portugal'),
    'PW' => t('Palau'),
    'PY' => t('Paraguay'),
    'QA' => t('Qatar'),
    'RE' => t('Reunion'),
    'RO' => t('Romania'),
    'RS' => t('Serbia'),
    'RU' => t('Russia'),
    'RW' => t('Rwanda'),
    'SA' => t('Saudi Arabia'),
    'SB' => t('Solomon Islands'),
    'SC' => t('Seychelles'),
    'SD' => t('Sudan'),
    'SE' => t('Sweden'),
    'SG' => t('Singapore'),
    'SH' => t('Saint Helena'),
    'SI' => t('Slovenia'),
    'SJ' => t('Svalbard and Jan Mayen'),
    'SK' => t('Slovakia'),
    'SL' => t('Sierra Leone'),
    'SM' => t('San Marino'),
    'SN' => t('Senegal'),
    'SO' => t('Somalia'),
    'SR' => t('Suriname'),
    'ST' => t('Sao Tome and Principe'),
    'SV' => t('El Salvador'),
    'SY' => t('Syria'),
    'SZ' => t('Swaziland'),
    'TC' => t('Turks and Caicos Islands'),
    'TD' => t('Chad'),
    'TF' => t('French Southern Territories'),
    'TG' => t('Togo'),
    'TH' => t('Thailand'),
    'TJ' => t('Tajikistan'),
    'TK' => t('Tokelau'),
    'TL' => t('East Timor'),
    'TM' => t('Turkmenistan'),
    'TN' => t('Tunisia'),
    'TO' => t('Tonga'),
    'TR' => t('Turkey'),
    'TT' => t('Trinidad and Tobago'),
    'TV' => t('Tuvalu'),
    'TW' => t('Taiwan'),
    'TZ' => t('Tanzania'),
    'UA' => t('Ukraine'),
    'UG' => t('Uganda'),
    'UK' => t('United Kingdom'),
    'UM' => t('United States Minor Outlying Islands'),
    'US' => t('United States'),
    'UY' => t('Uruguay'),
    'UZ' => t('Uzbekistan'),
    'VA' => t('Vatican'),
    'VC' => t('Saint Vincent and the Grenadines'),
    'VE' => t('Venezuela'),
    'VG' => t('British Virgin Islands'),
    'VI' => t('U.S. Virgin Islands'),
    'VN' => t('Vietnam'),
    'VU' => t('Vanuatu'),
    'WF' => t('Wallis and Futuna'),
    'WS' => t('Samoa'),
    'YE' => t('Yemen'),
    'YT' => t('Mayotte'),
    'ZA' => t('South Africa'),
    'ZM' => t('Zambia'),
    'ZW' => t('Zimbabwe'),
  );

  // Sort the list.
  natcasesort($countries);

  // Give other modules a chance to alter the list of countries.
  drupal_alter('postaladdress_countries', $countries);

  return $countries;
}
